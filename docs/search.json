[{"path":"/articles/RFLOMICS-data-management.html","id":"datasets-managing-in-r","dir":"Articles","previous_headings":"","what":"Datasets managing in R:","title":"RFLOMICS-data-management","text":"input data (abundance, metadata, statistical framework), choice tools, parameters, threshold, analysis results managed () FlomicsMultiAssayExp object, instance class MultiAssayExperiment (MAE). See next paragraph description. object created FlomicsMultiAssay.constructor method. method takes input : list lists (per dataset) abundance matrices (metadata exist), “Design” object. Datasets managed FlomicsMultiAssayExp object, instance class MultiAssayExperiment (MAE). See MAE package vignette details. Example FlomicsMultiAssayExp object example two datasets Design managed MAE object. Design positioned @metada root object, well @colData @SampleMap. different datasets stored @ExperimentList (managed object class SummarizedExperiment). object 3 slots: * colData (case change global Design) * assays: matrix * metadata: store results different analysis methods. example, datasetName.filtred object: + filteredFeatures: contain results FilterLowAbundance method. + PCAlist: results PCA done dataset. + normalisation: parameters output RunNormalization method. + contrasts: list contrast choosed analyse dataset. + DiffExpAnal: parameters output RunDiffAnalysis method. + CoExpAnal: parameters output runCoExpression method. + EnrichAnal: parameters output EnrichAnal method.","code":""},{"path":"/articles/RFLOMICS-input-data.html","id":"experimental-design","dir":"Articles","previous_headings":"","what":"Experimental design","title":"RFLOMICS-input-data","text":"file provides experimental plan table. first column indicates sample names. Next columns indicate experimental conditions (called biological factor replicate factor) metadata (optional). row describes sample specifying level experimental condition. file edited user must contain header explicit column names. avoid errors script execution, preferable modality description starts letter (example, factor Month, better write M1 rather 1).","code":"ExpDesign.file <- file.path(path=path.package(\"RFLOMICS\"), file=\"/ExamplesFiles/ecoseed/condition.txt\") ExpDesign      <- read.table(file = ExpDesign.file, header = TRUE, row.names = 1, sep = \"\\t\")  DT::datatable(ExpDesign)"},{"path":"/articles/RFLOMICS-input-data.html","id":"omics-data","dir":"Articles","previous_headings":"","what":"Omics data","title":"RFLOMICS-input-data","text":"omics : fist file (mandatory) provide matrix-likes abundance omics data : read counts per genes RNAseq data, intensity proteins proteomics data, intensity metabolites metabolomics data. first column indicates feature (gene, protein, metabolite) names, Header matrix indicates sample names.","code":""},{"path":"/articles/RFLOMICS-input-data.html","id":"rnaseq-data","dir":"Articles","previous_headings":"Omics data","what":"RNAseq data","title":"RFLOMICS-input-data","text":"","code":"geneCount.file <- file.path(path = path.package(\"RFLOMICS\"), file =\"/ExamplesFiles/ecoseed/transcriptome2_ecoseed.txt\") geneCount      <- read.table(file = geneCount.file, header = TRUE, row.names = 1, sep = \"\\t\")  DT::datatable(geneCount[1:10, 1:5])"},{"path":"/articles/RFLOMICS-input-data.html","id":"proteomics-data","dir":"Articles","previous_headings":"Omics data","what":"Proteomics data","title":"RFLOMICS-input-data","text":"","code":"protAbundance.file <- file.path(path = path.package(\"RFLOMICS\"), file =\"/ExamplesFiles/ecoseed/proteome_ecoseed.txt\") protAbundance <- read.table(file = protAbundance.file, header = TRUE, row.names = 1, sep = \"\\t\")  DT::datatable(protAbundance[1:10, 1:5])"},{"path":"/articles/RFLOMICS-input-data.html","id":"metabolomics-data","dir":"Articles","previous_headings":"Omics data","what":"Metabolomics data","title":"RFLOMICS-input-data","text":"","code":"metaAbundance.file <- file.path(path = path.package(\"RFLOMICS\"), file =\"/ExamplesFiles/ecoseed/metabolome_ecoseed.txt\") metaAbundance <- read.table(file = metaAbundance.file, header = TRUE, row.names = 1, sep = \"\\t\")  DT::datatable(metaAbundance[1:10, 1:5])"},{"path":"/articles/RFLOMICS-input-data.html","id":"metadata","dir":"Articles","previous_headings":"","what":"metadata","title":"RFLOMICS-input-data","text":"second file (optional) provide supplementary information (metadata) sample (develop). image image","code":"# metadata.file <- file.path(path = path.package(\"RFLOMICS\"), file =\"/ExamplesFiles/ecoseed/???\") # metadata      <- read.table(file = metadata.file, header = TRUE, row.names = 1, sep = \"\\t\") #  # DT::datatable(metadata[1:10, 1:5])"},{"path":"/articles/RFLOMICS-input-data.html","id":"annotation","dir":"Articles","previous_headings":"","what":"Annotation","title":"RFLOMICS-input-data","text":"Load annotation file(s) enrichment analysis. column 1 => feature names (used abundance matrix) column 2 => term IDs (ex. GO term accession : GO:0034599) column 3 => term names (ex. GO term name : cellular response oxidative stress) column 4 => source type (ex. GO domain : biological_process)","code":"annot.genes.file <- file.path(path=path.package(\"RFLOMICS\"), file=\"/ExamplesFiles/ecoseed/AT_GOterm_EnsemblPlants.txt\") annot.genes <- read.table(file = annot.genes.file, header = TRUE, sep=\"\\t\", ) #> Warning in scan(file = file, what = what, sep = sep, quote = quote, dec = dec, : #> EOF within quoted string #> Warning in scan(file = file, what = what, sep = sep, quote = quote, dec = dec, : #> number of items read is not a multiple of the number of columns colnames(annot.genes) <- c(\"geneID\", \"Term\", \"Name\", \"Domain\")  DT::datatable(annot.genes[1:10,])"},{"path":"/articles/RFLOMICS-install.html","id":"what-is-clutstermq","dir":"Articles","previous_headings":"","what":"What is clutstermq","title":"RFLOMICS-install","text":"clustermq R package allow send functions calls jobs computing cluster minimal interface provided Q function. package used RFLOMICS speed differential expression co-expression analysis.","code":""},{"path":"/articles/RFLOMICS-install.html","id":"clustermq-configuration","dir":"Articles","previous_headings":"","what":"clustermq configuration","title":"RFLOMICS-install","text":"Create bioinfo account Clustermq installed R 4.1.1 version. Thus egdeR Coseq packages.","code":""},{"path":"/articles/RFLOMICS-install.html","id":"set-up-ssh-keys-for-password-less-login-on-genotoul","dir":"Articles","previous_headings":"clustermq configuration","what":"Set up SSH keys for password-less login on Genotoul","title":"RFLOMICS-install","text":"Generate ssh key local => Enter without changing default location Enter passphrase (empty passphrase): => Enter 2 times let empty 2 keys created: public one private. first one send genotoul second one keeped local machine. Copy public key genotoul command put public key authorized_keys file genotoul. $ ssh-copy-id dcharif@genologin.toulouse.inra.fr authenticity host ‘Server’s IP address’ can’t established. RSA key fingerprint … sure want continue connecting (yes/)? => enter yes => enter password Try connect know verify password asked $ ssh dcharif@genologin.toulouse.inra.fr https://www.hostinger.fr/tutoriels/generer-cle-ssh/","code":"ssh-keygen -t rsa  <!-- Enter file in which to save the key (/home/dcharif/.ssh/id_rsa): -->"},{"path":[]},{"path":"/articles/RFLOMICS-install.html","id":"on-cluster-genotoul-server-slurm","dir":"Articles","previous_headings":"clustermq configuration","what":"On cluster (genotoul server : SLURM)","title":"RFLOMICS-install","text":"Configure clustermq Create file SSH.tmpl home directory LOCAL machine: #ou Q(…, template=list(bashenv=“system/R-3.6.0”)) $HOME directory GENOTOUL, create clustermq.template file","code":"ssh -o \"ExitOnForwardFailure yes\" -f \\     -R {{ ctl_port }}:localhost:{{ local_port }} \\     -R {{ job_port }}:localhost:{{ fwd_port }} \\     {{ ssh_host }} \\     \"source /etc/profile\\      module load {{ bashenv }}\\      R --no-save --no-restore -e \\      'clustermq:::ssh_proxy(ctl={{ ctl_port }}, job={{ job_port }})' \\      > {{ ssh_log | /dev/null }} 2>&1\" 2) In your $HOME/.Rprofile on your LOCAL machine: options(     clustermq.scheduler = \"ssh\",     clustermq.template = \"/Users/dcharif/SSH.tmpl\",     clustermq.ssh.host = \"dcharif@genologin.toulouse.inra.fr\", # use your user and host, obviously     clustermq.ssh.log = \"/home/dcharif/cmq_ssh.log\" # log for easier debugging ) 3) In your $HOME/.Rprofile on GENOTOUL set the following options: options(     clustermq.scheduler = \"slurm\",     clustermq.template = \"/home/dcharif/clustermq.template\",     clustermq.defaults = list(bashenv=\"system/R-3.6.0\") ) #!/bin/sh #SBATCH --job-name={{ job_name }} #SBATCH --partition=workq #SBATCH --output={{ log_file | /dev/null }} # you can add .%a for array index #SBATCH --error={{ log_file | /dev/null }} #SBATCH --mem-per-cpu={{ memory | 4096 }} #SBATCH --array=1-{{ n_jobs }} #SBATCH --mail-user=delphine.charif@inra.fr  module load {{ bashenv }}  ulimit -v $(( 1024 * {{ memory | 4096 }} )) CMQ_AUTH={{ auth }} R --no-save --no-restore -e 'clustermq:::worker(\"{{ master}}\")'"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/RFLOMICS.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction:","title":"RFLOMICS","text":"RFLOMICS based proven statistical methods pipeline RNAseq data analysis (1). also based functions allowing automation contrasts’s writting R (2). Data used example provided Loic Rajjou Gwendal Cueff. included inst/ExampleFiles/ecoseed directory package. Briefly, . thaliana’s transcriptomes obtained context study seed germination vigor. particular, author interested influence temperature (high, medium low) imbibition (Dry: DI, early imbibition: EI late imbibition: LI) gene’s expression. Ilana Lambert, Christine Paysant-Le Roux, Stefano Colella, Marie-Laure Martin-Magniette (2020) DiCoExpress: tool process multifactorial RNAseq experiments quality controls co-expression analysis differential analysis based contrasts inside GLM models. Plant Methods vol. 16, p. 68 [Christine Paysant-Le Roux (2020), packageContrast_2020, unpublished] [Projet ecoseed (), ]","code":""},{"path":"/articles/RFLOMICS.html","id":"run-rflomics","dir":"Articles","previous_headings":"","what":"Run RFLOMICS","title":"RFLOMICS","text":"left side interface different tab menu appear analysis progresses guide user.","code":"library(RFLOMICS) runApp()"},{"path":"/articles/RFLOMICS.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load Data","title":"RFLOMICS","text":"start set project name (mandatory). load experimental design different omics datasets.","code":""},{"path":"/articles/RFLOMICS.html","id":"load-experimental-design","dir":"Articles","previous_headings":"Load Data","what":"Load Experimental Design","title":"RFLOMICS","text":"experimental design file contains information readiness status sample (see link : vignette input ). soon file loaded, can define type (Biological factor : Bio; batch factor : batch; metadata information : meta) reference level design factor. required minimum 1 biological factor (maximum 3 biological factors) 1 batch factor. order columns matter. possible exclude samples design. samples excluded analysis even present omics dataset matrix. interface capture","code":""},{"path":"/articles/RFLOMICS.html","id":"load-omics-data","dir":"Articles","previous_headings":"Load Data","what":"Load Omics data","title":"RFLOMICS","text":"tutoral provide 3 datasets : RNAseq data (read counts), proteomics data (abundance proteins), metabolomics data (intensity metabolites) (see link : vignette input). must precise dataset type omics. can give suitable names dataset. Default, called respectively (set1, set2, set3). soon data loaded RFlomics MultiAssayExperiment object created (see link : data management). upset representation provide detail sample intersection different datasets.","code":""},{"path":"/articles/RFLOMICS.html","id":"completeness-check","dir":"Articles","previous_headings":"Load Data","what":"Completeness check","title":"RFLOMICS","text":"design must complete possible balanced. Complete design (mandatory) mean possible combinations biological factor’s level (called groups) presents. Balanced design (recommended) equal number observations (replicates) groups. constraint checked represented graph (square represent 1 group color level indicate number observations).","code":""},{"path":"/articles/RFLOMICS.html","id":"set-statistical-framework","dir":"Articles","previous_headings":"","what":"Set statistical framework","title":"RFLOMICS","text":"Interface provides models written simplest one complete one. two orders interaction terms biological factors appear. Batch factor never appear interaction terms. case choose complete model. ‘priori’ hypothesis (contrast) calculated chosen model displayed (see link vignette contrast). user must select correspond biological issues. case studying effect temperature seed germination (transition state dormancy state germination vigor). select 3 average contrasts (see image) : statistical framework applied loaded datasets. interface capture","code":""},{"path":"/articles/RFLOMICS.html","id":"omics-data-analysis","dir":"Articles","previous_headings":"","what":"Omics data analysis","title":"RFLOMICS","text":"3 Item menus appear side bar menu corresponds 3 loaded omics types. dataset, different steps data analysis proposed tab panels. analysis steps must performed sequentially. can switch datasets. However, perform new task previous one completed. progress bar indicates .","code":""},{"path":"/articles/RFLOMICS.html","id":"data-exploratory","dir":"Articles","previous_headings":"Omics data analysis","what":"Data Exploratory","title":"RFLOMICS","text":"tab panel access data quality perform appropriate data filtering processing according type omics. default, features 0 count conditions removed data. Specifically data possibility exclude samples select subset samples analyze, provided completeness condition met.","code":""},{"path":"/articles/RFLOMICS.html","id":"rnaseq-analysis","dir":"Articles","previous_headings":"Omics data analysis > Data Exploratory","what":"RNAseq analysis","title":"RFLOMICS","text":"RNAseq data, low expressed genes filtered genes whose cpm expression greater “CPM cutoff” x samples kept. value x given “Filtering strategy” (NbOfsample_over_cpm <= NbConditions). default data filtered based NbCondition strategy avec CPM cutoff equel 5. example, 9 conditions. , number genes CPM less 5 least 9 samples removed. correct differences sequencing depths (library size), RFlomics propose one method normalization, “TMM method” edgeR package.","code":"# geneToKeep <- counts[rowSums(edgeR::cpm(counts) >= CPM_Cutoff) >= x, ] # dge <- edgeR::DGEList(counts=counts, group=groups) # dge <- edgeR::calcNormFactors(dge, method=\"TMM\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2022). RFLOMICS: Package explore analyze RNAseq experiment. R package version 0.0.0.9000.","code":"@Manual{,   title = {RFLOMICS: Package to explore and analyze an RNAseq experiment},   author = {First Last},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Package to explore and analyze an RNAseq experiment","text":"Rflomics ( devlopement ) R package coupled shiny application dedicated managment analysis multiple omics-datasets (RNAseq illumina, proteomic LC-MS/MS, … ) statistical framework vertical integration observations (.e. analysis omics data across experiments indivuals) see figure . moment, Rflomics can deal multi-factorial experiments (3 biological factors batch factor) helps set statistical model contrasts associated biological experiments. RNA, proteomic metabolomic datasets analysed expert methods parameters.","code":""},{"path":"/index.html","id":"aims","dir":"","previous_headings":"","what":"Aims","title":"Package to explore and analyze an RNAseq experiment","text":"Guarantee relevance used methods parameters (RNAseq workflow: DicoExpress) Decrease time spend code robust analysis Allow experiment sharing capitalizing Ensure reproducibility omics analysis","code":""},{"path":"/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Package to explore and analyze an RNAseq experiment","text":"manages raw processed (filtred, normalized) datasets (MultiAssayExperiment package) can allows remote computing time/cpu consuming tasks (clustermq packag) h4(“Incoming Features”) - start include multi-omics integration methods (MCIA first ?) - Imputation missing values proteomics metabolomics data","code":""},{"path":"/index.html","id":"input","dir":"","previous_headings":"","what":"Input","title":"Package to explore and analyze an RNAseq experiment","text":"RNAseq (illumina data sequencing technology): matrix gene expression based raw read count quantification. -> gene_id line individuals column Proteomic (LC-MS/MS mass spectrometry): matrix protein abundances based “,tags$b(”XIC quantification“),”(Extracted ion chromatograms) -> protein_id line individuals column -> preprocessed matrix expected moment (NA imputation, filtering) Metabolomic (GC-MS mass spectrometry): matrix metabolomic abundances based XIC quantification Extracted ion chromatograms -> metabolite_id line individuals column -> preprocessed matrix expected moment (NA imputation, filtering)","code":""},{"path":"/index.html","id":"datasets-example","dir":"","previous_headings":"","what":"Datasets example","title":"Package to explore and analyze an RNAseq experiment","text":"ecoseed dataset: Data provided Loic Rajjou Gwendal Cueff. included inst/ExampleFiles/ecoseed directory package. Briefly, . thaliana’s transcriptoms, proteoms metaboloms obtained context study seed germination vigor. particular, author interested influence temperature (high, medium low) imbibition (Dry: DI, early imbibition: EI late imbibition: LI) gene’s expression. example report","code":""},{"path":[]},{"path":"/index.html","id":"contact-and-support","dir":"","previous_headings":"","what":"Contact and support","title":"Package to explore and analyze an RNAseq experiment","text":"ijpb-bioinfo-team","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Package to explore and analyze an RNAseq experiment","text":"Paysant-Le Roux C. (2020), packageContrast_2020, unpublished\"), Ilana L. et al. (2020), DiCoExpress MultiAssayExperiment package edgeR package limma package coseq package clustermq package","code":""},{"path":"/reference/CheckExpDesignCompleteness-MultiAssayExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"CheckExpDesignCompleteness — CheckExpDesignCompleteness,MultiAssayExperiment-method","title":"CheckExpDesignCompleteness — CheckExpDesignCompleteness,MultiAssayExperiment-method","text":"method check experimental design characteristics. biological factor ? replicat/batch factor ? enough replicat/batch ? least 3 advised design completed ? presence possible combinations levels factors design balanced ? presence number replicat possible combinations Completed design least biological one batch factors required using RFLOMICS workflow.","code":""},{"path":"/reference/CheckExpDesignCompleteness-MultiAssayExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CheckExpDesignCompleteness — CheckExpDesignCompleteness,MultiAssayExperiment-method","text":"","code":"# S4 method for MultiAssayExperiment CheckExpDesignCompleteness(object, colnames = NULL)"},{"path":"/reference/CheckExpDesignCompleteness-MultiAssayExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CheckExpDesignCompleteness — CheckExpDesignCompleteness,MultiAssayExperiment-method","text":"object class MultiAssayExperiment-class","code":""},{"path":"/reference/CheckExpDesignCompleteness-MultiAssayExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CheckExpDesignCompleteness — CheckExpDesignCompleteness,MultiAssayExperiment-method","text":"named list two objects \"count:\" data.frame number possible combinations levels factors. \"message:\" results check \"true\" :\"  false \"experimental design complete balanced \"lowRep\" :\"  false \"WARNING : 3 biological replicates needed. \"noCompl\" :\" false \"ERROR : experimental design complete. \"noBalan\" :\" warning \"WARNING : experimental design complete balanced. \"noBio\" :\" false \"ERROR : bio factor ! \"noBatch :\" false \"ERROR : replicat","code":""},{"path":"/reference/CheckExpDesignCompleteness-MultiAssayExperiment-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CheckExpDesignCompleteness — CheckExpDesignCompleteness,MultiAssayExperiment-method","text":"","code":"Design.File <- read.table(file= paste(path.package(\"RFLOMICS\"), \"/ExamplesFiles/TP/experimental_design.txt\",sep=\"\"),header = TRUE,row.names = 1, sep = \"\\t\")  # Define the type of each factor Design.typeList <- c(\"Bio\",\"Bio\",\"batch\")  # Define the reference modality for each factor Design.refList <- c(\"WT\",\"control\",\"rep1\")  # Initialize an object of class ExpDesign Design.obj <- ExpDesign.constructor(ExpDesign = Design.File, refList = Design.refList, typeList = Design.typeList) CheckExpDesignCompleteness(Design.obj) #> Error in (function (classes, fdef, mtable) {    methods <- .findInheritedMethods(classes, fdef, mtable)    if (length(methods) == 1L)         return(methods[[1L]])    else if (length(methods) == 0L) {        cnames <- paste0(\"\\\"\", vapply(classes, as.character,             \"\"), \"\\\"\", collapse = \", \")        stop(gettextf(\"unable to find an inherited method for function %s for signature %s\",             sQuote(fdef@generic), sQuote(cnames)), domain = NA)    }    else stop(\"Internal error in finding inherited methods; didn't return a unique method\",         domain = NA)})(list(structure(\"ExpDesign\", package = \"RFLOMICS\")), new(\"nonstandardGenericFunction\",     .Data = function (object, ...)     {        standardGeneric(\"CheckExpDesignCompleteness\")    }, generic = structure(\"CheckExpDesignCompleteness\", package = \"RFLOMICS\"),     package = \"RFLOMICS\", group = list(), valueClass = character(0),     signature = \"object\", default = NULL, skeleton = (function (object,         ...)     stop(\"invalid call in method dispatch to 'CheckExpDesignCompleteness' (no default method)\",         domain = NA))(object, ...)), <environment>): unable to find an inherited method for function ‘CheckExpDesignCompleteness’ for signature ‘\"ExpDesign\"’"},{"path":"/reference/Data_Distribution_Density.plot-SummarizedExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Data_Distribution_Density.plot — Data_Distribution_Density.plot,SummarizedExperiment-method","title":"Data_Distribution_Density.plot — Data_Distribution_Density.plot,SummarizedExperiment-method","text":"Data_Distribution_Density.plot","code":""},{"path":"/reference/Data_Distribution_Density.plot-SummarizedExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data_Distribution_Density.plot — Data_Distribution_Density.plot,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment Data_Distribution_Density.plot(object)"},{"path":"/reference/Data_Distribution_Density.plot-SummarizedExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data_Distribution_Density.plot — Data_Distribution_Density.plot,SummarizedExperiment-method","text":"object object class SummarizedExperiment","code":""},{"path":"/reference/DiffAnal.plot-SummarizedExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"DiffAnal.plot — DiffAnal.plot,SummarizedExperiment-method","title":"DiffAnal.plot — DiffAnal.plot,SummarizedExperiment-method","text":"interface method draw MAplot results differential analysis performed omic datasets stored object class SummarizedExperiment","code":""},{"path":"/reference/DiffAnal.plot-SummarizedExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DiffAnal.plot — DiffAnal.plot,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment DiffAnal.plot(object, hypothesis, Adj.pvalue.cutoff = 0.05, logFC.cutoff = 0)"},{"path":"/reference/DiffAnal.plot-SummarizedExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DiffAnal.plot — DiffAnal.plot,SummarizedExperiment-method","text":"object object class SummarizedExperiment hypothesis hypothesis MAplot drawn data name omic data MAplot drawn","code":""},{"path":"/reference/DiffAnal.plot-SummarizedExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DiffAnal.plot — DiffAnal.plot,SummarizedExperiment-method","text":"plot","code":""},{"path":"/reference/Enrichment.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Enrichment.plot — Enrichment.plot","title":"Enrichment.plot — Enrichment.plot","text":"Enrichment.plot","code":""},{"path":"/reference/Enrichment.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enrichment.plot — Enrichment.plot","text":"","code":"Enrichment.plot(   object,   Over_Under = c(\"overrepresented\", \"underrepresented\"),   top = 50,   domain = NULL,   listNames = NULL,   from = c(\"DiffExpEnrichAnal\", \"CoExpEnrichAnal\") )"},{"path":"/reference/Enrichment.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enrichment.plot — Enrichment.plot","text":"object object class SummarizedExperiment Over_Under \"overrepresented\" \"underrepresented\" (default : overrepresented) top level enriched terms display listNames vector DGEs cluster names (default : enriched lists) \"DiffExpAnal\" \"CoExpAnal\". default \"DiffExpAnal\"","code":""},{"path":"/reference/Enrichment.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enrichment.plot — Enrichment.plot","text":"plot","code":""},{"path":"/reference/ExpDesign-Constructor.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for the class ExpDesign-class — ExpDesign-Constructor","title":"Constructor for the class ExpDesign-class — ExpDesign-Constructor","text":"method initialize object class ExpDesign-class.","code":""},{"path":"/reference/ExpDesign-Constructor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for the class ExpDesign-class — ExpDesign-Constructor","text":"","code":"ExpDesign.constructor(ExpDesign, refList, typeList)"},{"path":"/reference/ExpDesign-Constructor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for the class ExpDesign-class — ExpDesign-Constructor","text":"ExpDesign data.frame. Row names give name sample construct combining factor's modality separated \"_\" (EX: WT_treated_rep1). Column names give name experimental factor vector character storing factor modality sample. refList list string giving reference modality factor. typeList vector string indicating type experimental factor. Two types effect required (\"Bio\" \"batch\")","code":""},{"path":"/reference/ExpDesign-Constructor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for the class ExpDesign-class — ExpDesign-Constructor","text":"object class ExpDesign-class","code":""},{"path":"/reference/ExpDesign-Constructor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor for the class ExpDesign-class — ExpDesign-Constructor","text":"","code":"Design.File <- read.table(file= paste(path.package(\"RFLOMICS\"),\"/ExamplesFiles/TP/experimental_design.txt\",sep=\"\"),header = TRUE,row.names = 1, sep = \"\\t\")  # Define the type of each factor Design.typeList <- c(\"Bio\",\"Bio\",\"batch\")  # Define the reference modality for each factor Design.refList <- c(\"WT\",\"control\",\"rep1\")  # Initialize an object of class ExpDesign Design.obj <- ExpDesign.constructor(ExpDesign = Design.File, refList = Design.refList, typeList = Design.typeList)"},{"path":"/reference/ExpDesign-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ExpDesign-class Class — ExpDesign-class","title":"ExpDesign-class Class — ExpDesign-class","text":"class, internal class RFLOMICS package. object class stores objects related experimental design setup statistical modeling data. informations required run omics analysis object input FlomicsMultiAssay.constructor.","code":""},{"path":"/reference/ExpDesign-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ExpDesign-class Class — ExpDesign-class","text":"ExpDesign","code":""},{"path":"/reference/ExpDesign-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ExpDesign-class Class — ExpDesign-class","text":"ExpDesign object class data.frame. Row names must give name sample construct combining factor's modality separated \"_\" (EX: WT_treated_rep1). Column vector character storing factor madality sample. Column names give name experimental factor. List.Factors named List factor giving modality experimental factor sample. Factors.Type named vector character giving type effect factor. Two types effect required (\"Bio\" \"batch\") Groups object class data.frame. Row names give name sample construct combining factor's modality separated \"_\" (EX: WT_treated_rep1). Two columns, first one give group sample concatenating factor modality except replicat. second one give name sample. Model.formula object class formula. Contrasts.List list data.frame giving hypothesis (contrasts) can formulated according model. list generated thanks getExpressionContrast method. Three type contrasts generated: simple, averaged, interaction. details see help getExpressionContrast method. Contrasts.Sel data.frame giving hypothesis (contrasts) user selected interface. projectName vector character giving name project. Contrasts.Coeff object class data.frame giving coefficient contrast.","code":""},{"path":[]},{"path":"/reference/ExpDesign-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ExpDesign-class Class — ExpDesign-class","text":"","code":"Design.File <- read.table(file= paste(path.package(\"RFLOMICS\"),\"/ExamplesFiles/TP/experimental_design.txt\",sep=\"\"), header = TRUE,row.names = 1, sep = \"\\t\")  # Define the type of each factor Design.typeList <- c(\"Bio\",\"Bio\",\"batch\")  # Define the reference modality for each factor Design.refList <- c(\"WT\",\"control\",\"rep1\")  # Initialize an object of class ExpDesign Design.obj <- ExpDesign.constructor(ExpDesign = Design.File, projectName = \"Design.Name\", refList = Design.refList, typeList = Design.typeList) #> Error in ExpDesign.constructor(ExpDesign = Design.File, projectName = \"Design.Name\",     refList = Design.refList, typeList = Design.typeList): unused argument (projectName = \"Design.Name\") class(Design.obj) #> Error in eval(expr, envir, enclos): object 'Design.obj' not found"},{"path":"/reference/FilterDiffAnalysis-SummarizedExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — FilterDiffAnalysis,SummarizedExperiment-method","title":"Title — FilterDiffAnalysis,SummarizedExperiment-method","text":"Title","code":""},{"path":"/reference/FilterDiffAnalysis-SummarizedExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — FilterDiffAnalysis,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment FilterDiffAnalysis(object, Adj.pvalue.cutoff = 0.05, logFC.cutoff = 0)"},{"path":"/reference/FilterDiffAnalysis-SummarizedExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — FilterDiffAnalysis,SummarizedExperiment-method","text":"SummarizedExperiment","code":""},{"path":[]},{"path":[]},{"path":"/reference/FilterLowAbundance-SummarizedExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"FilterLowAbundance — FilterLowAbundance,SummarizedExperiment-method","title":"FilterLowAbundance — FilterLowAbundance,SummarizedExperiment-method","text":"function aims removing genes/transcript count data matrix omic type \"RNAseq\". applying filtering criterion described reference. default, gene/transcript 0 count removed data. function computes count per million read (CPM) gene sample gives genes number sample(s) CPM_cutoff (NbOfsample_over_cpm). Two filtering strategies proposed: NbConditions: keep gene NbOfsample_over_cpm >= NbConditions NbReplicates: keep gene NbOfsample_over_cpm >= min(NbReplicat) filterByExpr: default filtering method implemented edgeR filterByExpr() function.","code":""},{"path":"/reference/FilterLowAbundance-SummarizedExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FilterLowAbundance — FilterLowAbundance,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment FilterLowAbundance(object, Filter_Strategy = \"NbConditions\", CPM_Cutoff = 5)"},{"path":"/reference/FilterLowAbundance-SummarizedExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FilterLowAbundance — FilterLowAbundance,SummarizedExperiment-method","text":"object object class SummarizedExperiment Filter_Strategy filtering strategy (\"NbConditions\" \"NbReplicates\") CPM_Cutoff CPM cutoff.","code":""},{"path":"/reference/FilterLowAbundance-SummarizedExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FilterLowAbundance — FilterLowAbundance,SummarizedExperiment-method","text":"object class SummarizedExperiment","code":""},{"path":"/reference/FilterLowAbundance-SummarizedExperiment-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FilterLowAbundance — FilterLowAbundance,SummarizedExperiment-method","text":"Filtered dataset stored ExperimentList slot SummarizedExperiment object List named (DataName.filtred). List filtered features stored named list (\"FilteredFeatures\") metadata slot given data set, stored ExperimentList slot SummarizedExperiment object.","code":""},{"path":"/reference/FilterLowAbundance-SummarizedExperiment-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"FilterLowAbundance — FilterLowAbundance,SummarizedExperiment-method","text":"Lambert, ., Paysant-Le Roux, C., Colella, S. et al. DiCoExpress: tool process multifactorial RNAseq experiments quality controls co-expression analysis differential analysis based contrasts inside GLM models. Plant Methods 16, 68 (2020).","code":""},{"path":[]},{"path":"/reference/FlomicsMultiAssay.constructor.html","id":null,"dir":"Reference","previous_headings":"","what":"FlomicsMultiAssay.constructor Constructor for the class MultiAssayExperiment-class — FlomicsMultiAssay.constructor","title":"FlomicsMultiAssay.constructor Constructor for the class MultiAssayExperiment-class — FlomicsMultiAssay.constructor","text":"function initializes object class MultiAssayExperiment-class list omics data object class ExpDesign-class.","code":""},{"path":"/reference/FlomicsMultiAssay.constructor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FlomicsMultiAssay.constructor Constructor for the class MultiAssayExperiment-class — FlomicsMultiAssay.constructor","text":"","code":"FlomicsMultiAssay.constructor(   inputs,   projectName,   ExpDesign,   refList,   typeList )"},{"path":"/reference/FlomicsMultiAssay.constructor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FlomicsMultiAssay.constructor Constructor for the class MultiAssayExperiment-class — FlomicsMultiAssay.constructor","text":"inputs named list omic dataset. Names must refer name omic dataset. omics dataset must list three objects: data:matrix omic data meta:optional quality check data omicType:Type omic data type \"None\", \"RNAseq\", \"proteomics\" \"Metabolomics\". projectName Project name ExpDesign data.frame. Row names give name sample construct combining factor's modality separated \"_\" (EX: WT_treated_rep1). Column names give name experimental factor vector character storing factor modality sample. refList list string giving reference modality factor. typeList vector string indicating type experimental factor. Two types effect required (\"Bio\" \"batch\") Design object class ExpDesign-class","code":""},{"path":"/reference/FlomicsMultiAssay.constructor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FlomicsMultiAssay.constructor Constructor for the class MultiAssayExperiment-class — FlomicsMultiAssay.constructor","text":"object class MultiAssayExperiment-class","code":""},{"path":"/reference/FlomicsMultiAssay.constructor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FlomicsMultiAssay.constructor Constructor for the class MultiAssayExperiment-class — FlomicsMultiAssay.constructor","text":"","code":"Design.File <- read.table(file= paste(path.package(\"RFLOMICS\"),\"/ExamplesFiles/TP/experimental_design.txt\",sep=\"\"),header = TRUE,row.names = 1, sep = \"\\t\")  # Define the type of each factor Design.Factors.Type <- c(\"Bio\",\"Bio\",\"batch\")  # Define the reference modality for each factor Design.Factors.Ref <- c(\"WT\",\"control\",\"rep1\")  # Initialize an object of class ExpDesign Design.obj <- ExpDesign.constructor(ExpDesign = Design.File, projectName = \"Design.Name\", refList = Design.Factors.Ref,  typeList = Design.Factors.Type) #> Error in ExpDesign.constructor(ExpDesign = Design.File, projectName = \"Design.Name\",     refList = Design.Factors.Ref, typeList = Design.Factors.Type): unused argument (projectName = \"Design.Name\") Design.Factors.Name <- names(Design.File) Design.formulae <- GetModelFormulae(Factors.Name = Design.Factors.Name,Factors.Type=Design.Factors.Type) Design.formulae[[1]] #> ~replicat + genotype + treatment + genotype:treatment #> <environment: 0x7fd2e3ef3248> Design.obj <- getExpressionContrast(object = Design.obj, model.formula = names(Design.formulae[1])) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'getExpressionContrast': object 'Design.obj' not found Design.contrastList <- lapply(Design.obj@Contrasts.List, function(x) { return(x[1:2]$contrast) }) #> Error in lapply(Design.obj@Contrasts.List, function(x) {    return(x[1:2]$contrast)}): object 'Design.obj' not found Design.obj <- getContrastMatrix(object = Design.obj, contrastList = unlist(Design.contrastList)) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'getContrastMatrix': object 'Design.obj' not found   # Create a list of datasets ListofData <- list(\"RNAseq1\"=list(\"dataFile\"=paste(path.package(\"RFLOMICS\"),\"/ExamplesFiles/TP/rnaseq_gene_counts.txt\",sep=\"\"), \"qcFile\"=paste(path.package(\"RFLOMICS\"),\"/ExamplesFiles/TP/rnaseq_bioinfo_QC.txt\",sep=\"\"), \"omicType\"=\"RNAseq\")) FlomicsMultiAssay.constructor(inputs = ListofData, Design=Design.obj) #> Error in FlomicsMultiAssay.constructor(inputs = ListofData, Design = Design.obj): unused argument (Design = Design.obj)"},{"path":"/reference/Library_size_barplot.plot-SummarizedExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Library_size_barplot.plot — Library_size_barplot.plot,SummarizedExperiment-method","title":"Library_size_barplot.plot — Library_size_barplot.plot,SummarizedExperiment-method","text":"Library_size_barplot.plot","code":""},{"path":"/reference/Library_size_barplot.plot-SummarizedExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Library_size_barplot.plot — Library_size_barplot.plot,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment Library_size_barplot.plot(object)"},{"path":"/reference/Library_size_barplot.plot-SummarizedExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Library_size_barplot.plot — Library_size_barplot.plot,SummarizedExperiment-method","text":"object object class SummarizedExperiment","code":""},{"path":"/reference/Library_size_barplot.plot-SummarizedExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Library_size_barplot.plot — Library_size_barplot.plot,SummarizedExperiment-method","text":"plot","code":""},{"path":[]},{"path":"/reference/RunDiffAnalysis-SummarizedExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RunDiffAnalysis — RunDiffAnalysis,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment RunDiffAnalysis(   object,   design,   Adj.pvalue.method = \"BH\",   contrastList,   DiffAnalysisMethod,   clustermq = FALSE )"},{"path":"/reference/RunDiffAnalysis-SummarizedExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RunDiffAnalysis — RunDiffAnalysis,SummarizedExperiment-method","text":"object object class [SummarizedExperiment]}  {Adj.pvalue.method}{method choosen adjust pvalue.}  {contrastList}{list contrast test}  {DiffAnalysisMethod}{character vector giving name differential analysis method run. Either \"edgeRglmfit\", \"limmalmFit\", ...}  {clustermq}{boolean indicating whether constrasts computed local distant machine}  {Adj.pvalue.cutoff}{adjusted pvalue cut-}  {filter_only}{boolean indicating whether filter DE results applied (filter_only=TRUE). FALSE default.} } {   object class [SummarizedExperiment] interface method run differential analysis method omic datasets stored object class SummarizedExperiment. According type omic list contrasts, differential analysis method applied contrasts (hypothesis). Three methods available according type object: RNAseq data: glmFit function edgeR package proteomic metabolomic data: lmFit function limma package  Lambert, ., Paysant-Le Roux, C., Colella, S. et al. DiCoExpress: tool process multifactorial RNAseq experiments quality controls co-expression analysis differential analysis based contrasts inside GLM models. Plant Methods 16, 68 (2020).","code":""},{"path":"/reference/RunNormalization-SummarizedExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"RunNormalization — RunNormalization,SummarizedExperiment-method","title":"RunNormalization — RunNormalization,SummarizedExperiment-method","text":"function applied normalization method omic data sets stored object class SummarizedExperiment. RNAseq data:TMM function edgeR proposed default, see ref Proteomic data: Metabolomic data:","code":""},{"path":"/reference/RunNormalization-SummarizedExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RunNormalization — RunNormalization,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment RunNormalization(object, NormMethod)"},{"path":"/reference/RunNormalization-SummarizedExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RunNormalization — RunNormalization,SummarizedExperiment-method","text":"object object class SummarizedExperiment NormMethod Normalization method data name data set normalization performed.","code":""},{"path":"/reference/RunNormalization-SummarizedExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RunNormalization — RunNormalization,SummarizedExperiment-method","text":"object class SummarizedExperiment applied normalization method computed scaling factors (samples) stored named list (\"normalization\") two elements (respectively \"methode\" \"coefNorm\") metadata slot given data set, stored ExperimentList slot SummarizedExperiment object.","code":""},{"path":"/reference/RunNormalization-SummarizedExperiment-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"RunNormalization — RunNormalization,SummarizedExperiment-method","text":"Lambert, ., Paysant-Le Roux, C., Colella, S. et al. DiCoExpress: tool process multifactorial RNAseq experiments quality controls co-expression analysis differential analysis based contrasts inside GLM models. Plant Methods 16, 68 (2020).","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/RunPCA-SummarizedExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RunPCA — RunPCA,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment RunPCA(object)"},{"path":"/reference/RunPCA-SummarizedExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RunPCA — RunPCA,SummarizedExperiment-method","text":"object object class SummarizedExperiment-class.","code":""},{"path":"/reference/RunPCA-SummarizedExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RunPCA — RunPCA,SummarizedExperiment-method","text":"object class SummarizedExperiment","code":""},{"path":[]},{"path":"/reference/TransformData-SummarizedExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"TransformData — TransformData,SummarizedExperiment-method","title":"TransformData — TransformData,SummarizedExperiment-method","text":"TransformData","code":""},{"path":"/reference/TransformData-SummarizedExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TransformData — TransformData,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment TransformData(object, transform_method = \"log2\")"},{"path":"/reference/TransformData-SummarizedExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TransformData — TransformData,SummarizedExperiment-method","text":"object class SummarizedExperiment","code":""},{"path":"/reference/TransformData-SummarizedExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TransformData — TransformData,SummarizedExperiment-method","text":"object class SummarizedExperiment","code":""},{"path":"/reference/abundanceBoxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"abundanceBoxplot — abundanceBoxplot,SummarizedExperiment-method","title":"abundanceBoxplot — abundanceBoxplot,SummarizedExperiment-method","text":"function produces boxplots raw normalized data matrix. One color level combination factor. allows detect outlier samples see normalization effect.","code":""},{"path":"/reference/abundanceBoxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"abundanceBoxplot — abundanceBoxplot,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment abundanceBoxplot(object)"},{"path":"/reference/abundanceBoxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"abundanceBoxplot — abundanceBoxplot,SummarizedExperiment-method","text":"object object class SummarizedExperiment-class","code":""},{"path":"/reference/abundanceBoxplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"abundanceBoxplot — abundanceBoxplot,SummarizedExperiment-method","text":"#' @title Data_Distribution.plot #' #' @param object object class SummarizedExperiment #' @param plot Type plot : boxplot (\"boxplot\") density plot (\"density\") #' @exportMethod Data_Distribution.plot #' @export #' @return plot #' @rdname Data_Distribution.plot #' @examples #' @importFrom ggplot2 geom_density boxplot xlab setMethod(f=\"Data_Distribution.plot\",           signature=\"SummarizedExperiment\",           definition <- function(object, plot = \"boxplot\")            switch (object@metadata$omicType,                     \"RNAseq\" =                       # normalization                       (.null(object@metadata[[\"Normalization\"]]$coefNorm))                         pseudo <- log2(SummarizedExperiment::assay(object) + 1)                          y_lab  <- \"log2(gene counts)\"                         title  <- \"Raw data\"                      # normalization                       else                         pseudo <- log2(scale(SummarizedExperiment::assay(object), center=FALSE,                                              scale=object@metadata[[\"Normalization\"]]$coefNorm$norm.factors)+1)                          y_lab  <- \"log2(normalized gene counts)\"                         title  <- \"Filtered normalized (TMM) data\"                    ,                     \"proteomics\" =                        # rflomics transformation (plot without log2; know input prot/meta transformed )                       (.null(object@metadata$transform_method))                         pseudo <- SummarizedExperiment::assay(object)                          x_lab  <- \"Protein abundance (?)\"                         title  <- \"Raw data\"                      # transformation                       else                         # log2 transformation chosen                         switch (object@metadata$transform_method,                                 \"log2\" =                                    pseudo <- SummarizedExperiment::assay(object)                                    x_lab  <- \"Transformed protein abundance\"                                   title  <- \"Transformed data (method : log2)\" ,                                \"none\" =                                    pseudo <- log2(SummarizedExperiment::assay(object) + 1)                                    x_lab  <- \"Transformed protein abundance\"                                   title  <- \"Transformed data (method : ?)\"  )                    ,                     \"metabolomics\" =                        # rflomics transformation (plot without log2; know input prot/meta transformed )                       (.null(object@metadata$transform_method))                         pseudo <- SummarizedExperiment::assay(object)                          x_lab  <- \"Metabolite abundance (?)\"                         title  <- \"Raw data\"                      # transformation                       else                         # log2 transformation chosen                         switch( object@metadata$transform_method,                                 \"log2\" =                                    pseudo <- SummarizedExperiment::assay(object)                                    x_lab  <- \"Transformed protein abundance\"                                   title  <- \"Transformed data (method : log2)\" ,                                 \"none\" =                                    pseudo <- log2(SummarizedExperiment::assay(object) + 1)                                    x_lab  <- \"Transformed protein abundance\"                                   title  <- \"Transformed data (method : ?)\"  )            )            colnames(pseudo) <- c(\"features\", \"samples\", \"value\")             pseudo.gg <- dplyr::full_join(pseudo, object@metadata$Groups, =\"samples\")            switch (plot,               \"boxplot\" =                  #                 pseudo_bis$samples <- factor(pseudo_bis$samples, levels = unique(pseudo_bis$samples))                p <- ggplot(pseudo_bis, aes(x=samples, y=value)) + ggplot2::geom_boxplot(aes(fill=groups)) +                   theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = \"none\") + xlab(\"\") + ylab(y_lab) + ggtitle(title)              ,               \"density\" =                    #                   p <- ggplot2::ggplot(pseudo.gg) + geom_density(aes(x=value, group = samples, color=groups), trim=FALSE) + xlab(y_lab) +                     theme(legend.position='none') + ggtitle(title)            )            print(p)            )","code":""},{"path":"/reference/getContrastMatrix-MultiAssayExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"getContrastMatrix — getContrastMatrix,MultiAssayExperiment-method","title":"getContrastMatrix — getContrastMatrix,MultiAssayExperiment-method","text":"Define contrast matrix contrast list contrast name contrast coefficients","code":""},{"path":"/reference/getContrastMatrix-MultiAssayExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getContrastMatrix — getContrastMatrix,MultiAssayExperiment-method","text":"","code":"# S4 method for MultiAssayExperiment getContrastMatrix(object, contrastList)"},{"path":"/reference/getContrastMatrix-MultiAssayExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getContrastMatrix — getContrastMatrix,MultiAssayExperiment-method","text":"contrastList vector character contrast object class MultiAssayExperiment-class","code":""},{"path":"/reference/getContrastMatrix-MultiAssayExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getContrastMatrix — getContrastMatrix,MultiAssayExperiment-method","text":"object class MultiAssayExperiment-class","code":""},{"path":[]},{"path":"/reference/getContrastMatrix-MultiAssayExperiment-method.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"getContrastMatrix — getContrastMatrix,MultiAssayExperiment-method","text":"Christine Paysant-Le Roux","code":""},{"path":"/reference/getExpressionContrast-MultiAssayExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"getExpressionContrast — getExpressionContrast,MultiAssayExperiment-method","title":"getExpressionContrast — getExpressionContrast,MultiAssayExperiment-method","text":"function allows, model formulae, give expression contrast data frames. Three types contrasts expressed: simple pairwise comparison averaged expression","code":""},{"path":"/reference/getExpressionContrast-MultiAssayExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getExpressionContrast — getExpressionContrast,MultiAssayExperiment-method","text":"","code":"# S4 method for MultiAssayExperiment getExpressionContrast(object, model.formula)"},{"path":"/reference/getExpressionContrast-MultiAssayExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getExpressionContrast — getExpressionContrast,MultiAssayExperiment-method","text":"model.formula model formula","code":""},{"path":"/reference/getExpressionContrast-MultiAssayExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getExpressionContrast — getExpressionContrast,MultiAssayExperiment-method","text":"object class [MultiAssayExperiment-class]","code":""},{"path":"/reference/getExpressionContrast-MultiAssayExperiment-method.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"getExpressionContrast — getExpressionContrast,MultiAssayExperiment-method","text":"Christine Paysant-Le Roux","code":""},{"path":"/reference/getExpressionContrast-MultiAssayExperiment-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"getExpressionContrast — getExpressionContrast,MultiAssayExperiment-method","text":"","code":"Design.File <- read.table(file= paste(path.package(\"RFLOMICS\"),\"/ExamplesFiles/TP/experimental_design.txt\",sep=\"\"), header = TRUE,row.names = 1, sep = \"\\t\")  # Define the type of each factor Design.Factors.Type <- c(\"Bio\",\"Bio\",\"batch\")  # Define the reference modality for each factor Design.Factors.Ref <- c(\"WT\",\"control\",\"rep1\")  # Initialize an object of class ExpDesign Design.obj <- ExpDesign.constructor(ExpDesign = Design.File, projectName = \"Design.Name\", refList = Design.Factors.Ref, typeList = Design.Factors.Type) #> Error in ExpDesign.constructor(ExpDesign = Design.File, projectName = \"Design.Name\",     refList = Design.Factors.Ref, typeList = Design.Factors.Type): unused argument (projectName = \"Design.Name\") Design.Factors.Name <- names(Design.File)  # Set the model formulae Design.formulae <- GetModelFormulae(Factors.Name = Design.Factors.Name,Factors.Type=Design.Factors.Type) Design.formulae[[1]] #> ~replicat + genotype + treatment + genotype:treatment #> <environment: 0x7fd2ea95f200>  # Obtained the Expression of Contrasts Design.obj <- getExpressionContrast(object = Design.obj, model.formula = names(Design.formulae[1])) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'getExpressionContrast': object 'Design.obj' not found"},{"path":[]},{"path":"/reference/mvQCdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mvQCdata — mvQCdata,MultiAssayExperiment-method","text":"","code":"# S4 method for MultiAssayExperiment mvQCdata(object, data, PCA = c(\"raw\", \"norm\"), axis = 3, pngFile = NULL)"},{"path":"/reference/mvQCdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mvQCdata — mvQCdata,MultiAssayExperiment-method","text":"object object class MultiAssayExperiment-class data name omic data PCA plot drawn PCA argument indicates type PCA results take: raw (\"raw\") normalized (\"norm\") data. axis number PCA axis keep pngFile name png file saving plot.","code":""},{"path":"/reference/mvQCdesign.html","id":null,"dir":"Reference","previous_headings":"","what":"mvQCdesign — mvQCdesign,MultiAssayExperiment-method","title":"mvQCdesign — mvQCdesign,MultiAssayExperiment-method","text":"mvQCdesign multivariate quality check design. design factor (one color ), PCA axis function plot coordinates sample PCA axis (y-axis) increasing order along x-axis. allows quick view variability associated factor.","code":""},{"path":"/reference/mvQCdesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mvQCdesign — mvQCdesign,MultiAssayExperiment-method","text":"","code":"# S4 method for MultiAssayExperiment mvQCdesign(object, data, PCA = c(\"raw\", \"norm\"), axis = 5, pngFile = NULL)"},{"path":"/reference/mvQCdesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mvQCdesign — mvQCdesign,MultiAssayExperiment-method","text":"object object class MultiAssayExperiment data name omic data PCA plot drawn PCA argument indicates PCA results plot: raw (\"raw\") normalised (\"normalised\") axis number PCA axis keep pngFile name png file saving plot.","code":""},{"path":"/reference/plotPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"plotPCA — plotPCA,SummarizedExperiment-method","title":"plotPCA — plotPCA,SummarizedExperiment-method","text":"function plot factorial map PCA object stored SummarizedExperiment-class object. default, samples colored groups (combinations level's factor)","code":""},{"path":"/reference/plotPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotPCA — plotPCA,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment plotPCA(object, PCA, PCs = c(1, 2), condition = \"groups\")"},{"path":"/reference/plotPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotPCA — plotPCA,SummarizedExperiment-method","text":"object object class SummarizedExperiment-class PCA argument indicates whether scaled PCA performed raw [‘raw’] normalized [‘norm’] data. PCs vector giving two axis drawn factorial map condition combination level's factor","code":""},{"path":[]},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""},{"path":"/reference/runAnnotationEnrichment-SummarizedExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"runAnnotationEnrichment — runAnnotationEnrichment,SummarizedExperiment-method","title":"runAnnotationEnrichment — runAnnotationEnrichment,SummarizedExperiment-method","text":"function performs enrichment test functional gene annotation data. data GO, KEGG ... instance, hypergeometric test applied. Parameters used recommended DiCoExpress workflow (see paper reference)","code":""},{"path":"/reference/runAnnotationEnrichment-SummarizedExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"runAnnotationEnrichment — runAnnotationEnrichment,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment runAnnotationEnrichment(   object,   annotation,   alpha = 0.01,   probaMethod = \"hypergeometric\",   ListNames = object@metadata$DiffExpAnal[[\"contrasts\"]]$contrastName,   from = \"DiffExpAnal\" )"},{"path":"/reference/runAnnotationEnrichment-SummarizedExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"runAnnotationEnrichment — runAnnotationEnrichment,SummarizedExperiment-method","text":"object object class SummarizedExperiment annotation gene annotation file. alpha pvalue cut-probaMethod probabilistic method use. \"DiffExpAnal\" \"CoExpAnal\". default \"DiffExpAnal\" CoExpListNames list clusters names.","code":""},{"path":"/reference/runAnnotationEnrichment-SummarizedExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"runAnnotationEnrichment — runAnnotationEnrichment,SummarizedExperiment-method","text":"object class SummarizedExperiment","code":""},{"path":"/reference/runAnnotationEnrichment-SummarizedExperiment-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"runAnnotationEnrichment — runAnnotationEnrichment,SummarizedExperiment-method","text":"Lambert, ., Paysant-Le Roux, C., Colella, S. et al. DiCoExpress: tool process multifactorial RNAseq experiments quality controls co-expression analysis differential analysis based contrasts inside GLM models. Plant Methods 16, 68 (2020).","code":""},{"path":"/reference/runCoExpression-SummarizedExperiment-method.html","id":null,"dir":"Reference","previous_headings":"","what":"runCoExpression — runCoExpression,SummarizedExperiment-method","title":"runCoExpression — runCoExpression,SummarizedExperiment-method","text":"interface method performed co-expression/co-abundance analysis omic-data.","code":""},{"path":"/reference/runCoExpression-SummarizedExperiment-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"runCoExpression — runCoExpression,SummarizedExperiment-method","text":"","code":"# S4 method for SummarizedExperiment runCoExpression(   object,   geneList,   K = 2:20,   replicates = 5,   nameList,   merge = \"union\",   model = \"Normal\",   GaussianModel = \"Gaussian_pk_Lk_Ck\",   transformation,   normFactors,   clustermq = FALSE )"},{"path":"/reference/runCoExpression-SummarizedExperiment-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"runCoExpression — runCoExpression,SummarizedExperiment-method","text":"object object class SummarizedExperiment geneList list genes K Number clusters (single value vector values) replicates number iteration K. merge \"union\" \"intersection\" model Type mixture model use \"Poisson\" \"normal\". default, normal. GaussianModel Type GaussianModel used Normal mixture model . parameters set \"Gaussian_pk_Lk_Ck\" default changed except error message proposed try another model like \"Gaussian_pk_Lk_Bk\". transformation transformation type used. default, \"arcsin\" one. normFactors type estimator used normalize differences library size. default, \"TMM\" one.","code":""},{"path":"/reference/runCoExpression-SummarizedExperiment-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"runCoExpression — runCoExpression,SummarizedExperiment-method","text":"results stored named list CoExpAnal metadata slot given SummarizedExperiment object. Objects : runCoExpression method return several results, coseq method, objects : model: see model params description transformation: see transformation params description normFactors: see normFactors params description meanFilterCutoff: set 50 RNA NULL others gene.list.names: see nameList Arguments description merge.type: see merge params description coseqResults: raw results coseq clusters: List clusters cluster.nb: number cluster plots: plots coseq results S4 object class SummarizedExperiment","code":""},{"path":[]},{"path":"/reference/runCoExpression-SummarizedExperiment-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"runCoExpression — runCoExpression,SummarizedExperiment-method","text":"Lambert, ., Paysant-Le Roux, C., Colella, S. et al. DiCoExpress: tool process multifactorial RNAseq experiments quality controls co-expression analysis differential analysis based contrasts inside GLM models. Plant Methods 16, 68 (2020).","code":""},{"path":[]}]
