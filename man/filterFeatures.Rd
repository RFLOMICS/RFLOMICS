% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RFLOMICS-Methods_07_Integration.R
\name{filterFeatures,RflomicsMAE-method}
\alias{filterFeatures,RflomicsMAE-method}
\alias{filterFeatures}
\title{Feature selection in a Rflomics MAE}
\usage{
\S4method{filterFeatures}{RflomicsMAE}(
  object,
  selOpt = rep(list("all"), length(object)),
  type = rep(list("union"), length(selOpt))
)
}
\arguments{
\item{object}{An object of class \link{RflomicsMAE-class}.
It is expected the MAE object is produced by rflomics previous analyses,
as it relies on their results.}

\item{selOpt}{list of vectors. Preferred named list with names corresponding
to the names of the experimentList in the object. For each Experiment, gives
the option for the filtering: either 'all', 'DE', 'none',
or a specific name of a
contrast or cluster (if coexpression results are available). Default is
taking all features for all experiment list. If the vector is named and an
Experiment is missing, no feature will be selected from it.
If the vector is not named, the selection will be applied in order of the
Experiments in the object.}

\item{type}{if selOpt is set to a specific set of contrasts or clusters,
indicates whether the selection is "union" or "intersection" of entities in
these sets.}
}
\value{
a RflomicsMAE, filtered with only the corresponding features.
}
\description{
This function selects all the features to keep according to
user's choices on each omic data.
}
\examples{
# load ecoseed data
library(RFLOMICS)
data("ecoseed.mae")

factorInfo <- data.frame(
  "factorName"   = c("Repeat", "temperature", "imbibition"),
  "factorType"   = c("batch", "Bio", "Bio")
)

# create rflomicsMAE object with ecoseed data
MAE <- RFLOMICS::createRflomicsMAE(
  projectName = "Tests",
  omicsData   = ecoseed.mae,
  omicsTypes  = c("RNAseq","proteomics","metabolomics"),
  factorInfo  = factorInfo)
names(MAE) <- c("RNAtest", "protetest", "metatest")

formulae <- generateModelFormulae( MAE) 
MAE <- setModelFormula(MAE, formulae[[1]])
contrastList <- Reduce(rbind, generateExpressionContrast(MAE)) 

MAE <- MAE |>
    setSelectedContrasts(contrastList[c(3,6,25)]) |>
    runTransformData(SE.name = "metatest", transformMethod = "log2") |>
    runNormalization(SE.name = "metatest", normMethod = "median")    |>
    runNormalization(SE.name = "protetest", normMethod = "median")   |>
    runDiffAnalysis(SE.name = "metatest", method = "limmalmFit")     |>
    runDiffAnalysis(SE.name = "protetest", method = "limmalmFit")    |>
    runCoExpression(SE.name = "protetest", K = 2:10, replicates = 5, 
                    merge = "union")

# Define the selections options
selOpt = list("protetest" = c("cluster.1", "H3"), "metatest" = c("DE"))
MAE1 <- filterFeatures(MAE, selOpt)
MAE1

selOpt2 = list("protetest" = c("cluster.2", "H25"), metatest = c("DE"))
MAE2 <- filterFeatures(MAE, selOpt2,
                       type = c("metatest" = "intersection",
                                "protetest" = 'union'))
MAE2

}
